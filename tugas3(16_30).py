# -*- coding: utf-8 -*-
"""tugas3(16-30).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13RkrV8HDOOwGB49Nep4Mn1x-oOK0vx9z
"""

import numpy as np
import matplotlib.pyplot as plt
dx = 0.01; dy = 0.01
x = np.arange(-2.5,2.5,dx)
y = np.arange(-2.5,2.5,dy)
X,Y = np.meshgrid(x,y)
def f(x,y):
    return (1 - y**5 + x**5)*np.exp(-x**2-y**2)
C = plt.contour(X,Y,f(X,Y),8,colors='black')
plt.contourf(X,Y,f(X,Y),8,cmap=plt.cm.hot)
plt.clabel(C, inline=1, fontsize=10)
plt.colorbar()
plt.show()

import numpy as np
import matplotlib.pyplot as plt
N = 8
theta = np.arange(0.,2 * np.pi, 2 * np.pi / N)
radius = np.array([4,7,5,3,1,5,6,7])
plt.axes([0.025, 0.025, 0.95, 0.95], polar=True)
colors = np.array(['#4bb2c5', '#c5b47f', '#EAA228', '#579575', '#839557', '#958c12', '#953579', '#4b5de4'])
bars = plt.bar(theta, radius, width=(2*np.pi/N), bottom=0.0, color=colors)
plt.show()

import numpy as np
import matplotlib.pyplot as plt
N = 8
theta = np.arange(0.,2 * np.pi, 2 * np.pi / N)
radius = np.array([4,7,5,3,1,5,6,7])
plt.axes([0.025, 0.025, 0.95, 0.95], polar=True)
colors = np.array(['lightgreen', 'darkred', 'navy', 'brown', 'violet', 'plum', 'purple', 'yellow', 'green'])
bars = plt.bar(theta, radius, width=(2*np.pi/N), bottom=0.0, color=colors)
plt.show()

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import numpy as np
fig = plt.figure()
ax = Axes3D(fig)
X = np.arange(-2,2,0.1)
Y = np.arange(-2,2,0.1)
X,Y = np.meshgrid(X,Y)
def f(x,y) :
    return (1 - y**5 + x**5)*np.exp(-x**2-y**2)
ax.plot_surface(X,Y,f(X,Y), rstride=1, cstride=1)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
xs = np.random.randint(30,40,100)
ys = np.random.randint(20,30,100)
zs = np.random.randint(10,20,100)
xs2 = np.random.randint(50,60,100)
ys2 = np.random.randint(30,40,100)
zs2 = np.random.randint(50,70,100)
xs3 = np.random.randint(10,30,100)
ys3 = np.random.randint(40,50,100)
zs3 = np.random.randint(40,50,100)
fig = plt.figure()
ax = Axes3D(fig)
ax.scatter(xs,ys,zs)
ax.scatter(xs2,ys2,zs2,c='r',marker='^')
ax.scatter(xs3,ys3,zs3,c='r',marker='*')
ax.set_xlabel('X Label')
ax.set_ylabel('Y Label')
ax.set_zlabel('Z Label')
plt.show()

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import numpy as np
fig = plt.figure()
ax = Axes3D(fig)
X = np.arange(-2,2,0.1)
Y = np.arange(-2,2,0.1)
X,Y = np.meshgrid(X,Y)
def f(x,y):
    return (1 - y**5 + x**5)*np.exp(-x**2-y**2)
ax.plot_surface(X,Y,f(X,Y), rstride=1, cstride=1, cmap=plt.cm.hot)
ax.view_init(elev=30,azim=125)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig = plt.figure()
ax = fig.add_axes([0.1,0.1,0.8,0.8])
inner_ax = fig.add_axes([0.6,0.6,0.25,0.25])
x1 = np.arange(10)
y1 = np.array([1,2,7,1,5,2,4,2,3,1])
x2 = np.arange(10)
y2 = np.array([0.5,1,3.5,0.5,2.5,1,2,1,1.5,0.5])
ax.plot(x1,y1)
inner_ax.plot(x2,y2)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
gs = plt.GridSpec(3,3)
fig = plt.figure(figsize=(6,6))
x1 = np.array([1,3,2,5])
y1 = np.array([4,3,7,2])
x2 = np.arange(5)
y2 = np.array([3,2,4,6,4])
s1 = fig.add_subplot(gs[1,:2])
s1.plot(x2,y2,'r')
s2 = fig.add_subplot(gs[0,:2])
s2.bar(x2,y2)
s3 = fig.add_subplot(gs[:2,2])
s3.barh(x2,y2,color='g')
s4 = fig.add_subplot(gs[:2,2])
s4.plot(x2,y2,'k')
s5 = fig.add_subplot(gs[2,1:])
s5.plot(x1,y1,'b',x2,y2,'yo')
plt.show()

import matplotlib.pyplot as plt
import math
import numpy as np
t = np.arange(0,5,0.1)
y1 = np.sin(math.pi*t)
y2 = np.sin(math.pi*t+math.pi/2)
y3 = np.sin(math.pi*t-math.pi/2)
plt.plot(t,y1,'b--',t,y2,'g',t,y3,'r-.')
plt.show()

import matplotlib.pyplot as plt
plt.axis([0,5,0,20]) #batas sumbu x dan sumbu y
plt.plot([1,2,3,4],[1,4,9,16],'ro-') #nilai data yang di plot
plt.text(1.1,12,'$y = x^2$',fontsize=20,bbox={'facecolor':'yellow','alpha':0.2})
plt.title('Plot Data persamaan Kuadrat', fontsize=20,fontname='Times New Roman')
plt.xlabel('x',fontsize=16,fontname='Times New Roman',color='blue')
plt.ylabel('y',fontsize=16,fontname='Times New Roman',color='blue')
plt.grid(True)
plt.legend(['First series'])
plt.savefig('grafik.png')
plt.show()